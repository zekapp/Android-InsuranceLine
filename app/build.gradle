buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'com.neenbedankt.android-apt'

String APK_NAME = "IL"
int VERSION_CODE = 1
String VERSION_NAME = "0.2.1"

project.archivesBaseName = APK_NAME + "_v_" + VERSION_NAME;

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"
    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "com.insurenceline"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode VERSION_CODE
        versionName VERSION_NAME
    }

    signingConfigs {
        // You must set up an environment var before release signing
        // Run: export APP_KEY={password}
        // TODO Add your release keystore in /keystore folder
        release {
            storeFile file('keystore/release.keystore.jks')
            keyAlias 'insuranceline'
            storePassword KEYSTORE_PASSWORD
            keyPassword KEY_PASSWORD
        }

        debug {
            storeFile file('keystore/debug.keystore.jks')
            keyAlias 'insuranceline_debug'
            storePassword 'android'
            keyPassword 'android'
        }
    }

    buildTypes {

        release {
            // This build points to Production server on Edge system. Final Server
            resValue("string", "server_uri_fitbit",         "https://api.fitbit.com/")
            resValue("string", "server_uri_edge",           "https://api.lifestylerewards.com.au/")
            resValue("string", "edge_app_id",               "929da5ad-2b68-4493-8a3d-1466a8792e00")
            resValue("string", "edge_app_client_id",        "59b9b30a-9597-4844-96d0-66c41442322b")
            /*resValue("string", "edge_app_client_id_lumo",   "31159E2C-1DA9-4F94-B279-A3259A74F127")*/
            resValue("string", "stockItemId1",              "3916")
            resValue("string", "stockItemId2",              "3915")
            resValue("string", "stockItemId3",              "3917")

            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debugProduction {
            // This build points to production server on Edge system.
            resValue("string", "server_uri_fitbit",         "https://api.fitbit.com/")
            resValue("string", "server_uri_edge",           "https://api.lifestylerewards.com.au/")
            resValue("string", "edge_app_id",               "929da5ad-2b68-4493-8a3d-1466a8792e00")
            resValue("string", "edge_app_client_id",        "59b9b30a-9597-4844-96d0-66c41442322b")
            /*resValue("string", "edge_app_client_id_lumo",   "31159E2C-1DA9-4F94-B279-A3259A74F127")*/
            resValue("string", "stockItemId1",              "3916")
            resValue("string", "stockItemId2",              "3915")
            resValue("string", "stockItemId3",              "3917")

            versionNameSuffix  " debugProduction"
            signingConfig signingConfigs.debug
            debuggable true
        }

        debugStaging {
            // This build points to Staging server on Edge system.
            resValue("string", "server_uri_fitbit",         "https://api.fitbit.com/")
            resValue("string", "server_uri_edge",           "http://stagingapi.lifestylerewards.com.au/")
            resValue("string", "edge_app_id",               "21beee2a-a162-4f6d-8465-0be5f1b42fb9") // see postmant link
            resValue("string", "edge_app_client_id",        "0e475287-214d-46f5-9b75-c9a9a33fcb62")
            /*resValue("string", "edge_app_client_id_lumo",   "aae7cbf8-99e0-4577-931d-785aa371e3e2")*/
            resValue("string", "stockItemId1",              "3781")
            resValue("string", "stockItemId2",              "3781")
            resValue("string", "stockItemId3",              "3781")

            versionNameSuffix  " debugStaging"
            signingConfig signingConfigs.debug
            debuggable true
        }
    }

    dexOptions {
        jumboMode true
    }

    //Needed because of this https://github.com/square/okio/issues/58
    lintOptions {
        warning 'InvalidPackage'
    }
}

dependencies {
    final SUPPORT_LIBRARY_VERSION = '23.2.0'
    final DBFLOW_VERSION    = '2.2.1'
    final RETROFIT_VERSION  = '2.0.0-beta4'
    final DAGGER_VERSION    = '2.0.2'
    final JOB_QUEUE_VERSION = '1.3.5'
    final HAMCREST_VERSION  = '1.3' // Hamcrest allows checking for conditions in your code via existing matchers classes and allows you to define your custom matcher implementations
    final EVENT_BUS         = '2.4.0'

    def daggerCompiler = "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    def dbFlowCompiler = "com.raizlabs.android:DBFlow-Compiler:$DBFLOW_VERSION"
    def jUnit = "junit:junit:4.12"
    def mockito = "org.mockito:mockito-core:1.10.19"

    // App Dependency
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile project(':customtabs')
    compile project(':shared')
    compile project(':lumomodule')
    compile 'com.android.support:appcompat-v7:23.2.0'
    compile 'com.android.support:design:23.2.0'
    compile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:cardview-v7:23.2.0"
    compile "com.raizlabs.android:DBFlow-Core:$DBFLOW_VERSION"
    compile "com.raizlabs.android:DBFlow:$DBFLOW_VERSION"
    compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:converter-jackson:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:adapter-rxjava:$RETROFIT_VERSION"
    compile "com.birbit:android-priority-jobqueue:$JOB_QUEUE_VERSION"
    compile 'com.jakewharton:butterknife:7.0.1'
    compile "de.greenrobot:eventbus:$EVENT_BUS"

    compile  "com.google.dagger:dagger:$DAGGER_VERSION"
    provided 'org.glassfish:javax.annotation:10.0-b28' //Required by Dagger2

    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'io.reactivex:rxjava:1.1.1'
    compile 'com.zekapp.library:progreswheelview:1.1.2'


    // Unit tests dependencies
    testCompile jUnit
    testCompile mockito
    testCompile "org.hamcrest:hamcrest-core:$HAMCREST_VERSION"
    testCompile "org.hamcrest:hamcrest-library:$HAMCREST_VERSION"
    testCompile "org.hamcrest:hamcrest-integration:$HAMCREST_VERSION"

    // Logger and prober
    compile 'com.jakewharton.timber:timber:4.1.0'
    compile 'com.facebook.stetho:stetho-okhttp3:1.3.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.0.1'

    // APT dependencies
    apt daggerCompiler
    apt dbFlowCompiler
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }
}
